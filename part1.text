a. Intro to react 

npx create-react-app app.name 
^ how to easily create a react app 
then 
cd part1
npm start

The code of the application resides in the src folder. 
Let's simplify the default code such that the contents
 of the file index.js look like:

// the index.js now defines a react component named app 
// ReactDOM.render(<App />, document.getElementById('root')); < this is a command
// renders the app contents into a div element with the id value root 
// By default, the file public/index.html is empty.
// You can try adding some HTML into the file. 
//However, when using React, all content that needs to be rendered is usually defined as React components.


// the function defining the element may contain anykind of js code
// can also render dynamic content in the component 
// Any JavaScript code within the curly braces is evaluated and the result of this evaluation is embedded into the defined place in the HTML produced by the component.

//the layout of react components are written using jsx, looks like html but is a way to write js 
// complied into js, handeled by babel 
// jsx is xml like where every tag needs to be closed
// writing a new line is written like <br> in html
// in jsx its <br />

// <Hello /> can be called multiple times if needed 

props - passing data to components
kind of like passing arguments or using .format 
first have the function defining component have a parameter props 
then change the other code to reflect that 

It is good to remember that in React it is possible and worthwhile to write console.log() commands (which print to the console) within your code.

Also keep in mind that React component names must be capitalized.

const Hello = (props) => {
    return (
        <div> 
            <p>Hello {props.name}, you are {props.age} years old</p>
        </div>
    )
}
const App = () => {
    const name = 'Peter'
    const age = 10
    return (
        <div>
            <h1>Greetings</h1>
            <Hello name="maya" age={26+10}/> 
            <Hello name="daisy"/>
            <Hello name={name} age={age} />
        </div>
    )
}



const App = () => {
    const course = "Half Stack application development"
    const part1 = "Fundamentals of React"
    const excerises1 = 10
    const part2 = 'Using props to pass data'
    const excerises2 = 7
    const part3 = 'State of a compnent'
    const excerises3 = 14

    return (
        <div>
            <h1>{course}</h1>
            <p>
                {part1} {excerises1}
            </p>
            <p>
                {part2} {excerises2}
            </p>
            <p>
                {part3} {excerises3}
            </p>
            <p> Number of exercises {excerises1 + excerises2 + excerises3}</p>
        </div>
    )
}



part 1b - JavaScript

an additon to websites, helps with making websites better.
not all browsers support the newer features 
most famous way to transpile with Babel, automatically configured 
with create-react-app 
node.js is a popular js runtime enviornment by google 

.js filename is used 
the code is ran by using node name_of_file.js
 JavaScript != Java

 Variables in js

 const x = 1 
 let y = 5 

 const does not define a variable but a constant, a value which can
 no longer be changed 

 let defines a regular variable 

 Arrays :

 const t = [1. -1, 3]
 even tho we use const for arrays the values can be modified 
 array is an object the variable always points to the same object

 can iterate over an array 
 t.forEach()  - goes over each value in the array 

 in js new items are added using push 
 react uses functional programming 

 using immutable data structures, use concat, does not add items to an array
 but makes a new array where old and new values are included

 const t = [1, -1, 3]
 const t2 = t.concat(5)

 map method 

 const t = [1, 2, 3]
 const m1 = t.map(value => value * 2)
 const.log(m1)

 creates a new array with the values multiplied by 2 
 map can transform arrays to other things

 can make it into one containing string of html 

 Objects

 mutltiple ways to define objects in js, common way is object literals 
 listing properties within braces  

 const object1 = {
     name : 'Arto Hellas',
     age: 35,
     education: 'PhD
 }